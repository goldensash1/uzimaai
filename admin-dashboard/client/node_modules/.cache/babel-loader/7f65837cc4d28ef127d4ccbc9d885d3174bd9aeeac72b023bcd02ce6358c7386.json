{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminData');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (username, password) => api.post('/auth/login', {\n    username,\n    password\n  }),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: data => api.put('/auth/profile', data),\n  changePassword: (currentPassword, newPassword) => api.put('/auth/change-password', {\n    currentPassword,\n    newPassword\n  }),\n  // Helper methods\n  setAuthToken: token => {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: (page = 1, search = '') => api.get('/users', {\n    params: {\n      page,\n      search\n    }\n  }),\n  getUser: id => api.get(`/users/${id}`),\n  createUser: data => api.post('/users', data),\n  updateUser: (id, data) => api.put(`/users/${id}`, data),\n  deleteUser: id => api.delete(`/users/${id}`),\n  getUserStats: () => api.get('/users/stats/overview')\n};\n\n// Medicines API\nexport const medicinesAPI = {\n  getMedicines: (page = 1, search = '') => api.get('/medicines', {\n    params: {\n      page,\n      search\n    }\n  }),\n  getMedicine: id => api.get(`/medicines/${id}`),\n  createMedicine: data => api.post('/medicines', data),\n  updateMedicine: (id, data) => api.put(`/medicines/${id}`, data),\n  deleteMedicine: id => api.delete(`/medicines/${id}`),\n  getMedicineStats: () => api.get('/medicines/stats/overview')\n};\n\n// Reviews API\nexport const reviewsAPI = {\n  getReviews: params => api.get('/reviews', {\n    params\n  }),\n  getReview: id => api.get(`/reviews/${id}`),\n  updateReviewStatus: (id, status) => api.put(`/reviews/${id}/status`, {\n    reviewStatus: status\n  }),\n  deleteReview: id => api.delete(`/reviews/${id}`),\n  getReviewStats: () => api.get('/reviews/stats/overview')\n};\n\n// Search History API\nexport const searchAPI = {\n  getSearchHistory: params => api.get('/search', {\n    params\n  }),\n  getUserSearchHistory: (userId, params) => api.get(`/search/user/${userId}`, {\n    params\n  }),\n  getSearchStats: () => api.get('/search/stats/overview'),\n  getSearchTrends: () => api.get('/search/stats/trends')\n};\n\n// User History API\nexport const historyAPI = {\n  getUserHistory: params => api.get('/history', {\n    params\n  }),\n  getUserContext: params => api.get('/history/context', {\n    params\n  }),\n  getUserHistoryById: (userId, params) => api.get(`/history/user/${userId}`, {\n    params\n  }),\n  getHistoryStats: () => api.get('/history/stats/overview'),\n  getHistoryTrends: () => api.get('/history/stats/trends')\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getOverview: () => api.get('/dashboard/overview'),\n  getRecentActivity: () => api.get('/dashboard/recent-activity'),\n  getSystemHealth: () => api.get('/dashboard/health'),\n  getAnalytics: () => api.get('/dashboard/analytics'),\n  getPerformance: () => api.get('/dashboard/performance')\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","username","password","post","logout","getProfile","get","updateProfile","data","put","changePassword","currentPassword","newPassword","setAuthToken","defaults","common","clearAuthToken","usersAPI","getUsers","page","search","params","getUser","id","createUser","updateUser","deleteUser","delete","getUserStats","medicinesAPI","getMedicines","getMedicine","createMedicine","updateMedicine","deleteMedicine","getMedicineStats","reviewsAPI","getReviews","getReview","updateReviewStatus","reviewStatus","deleteReview","getReviewStats","searchAPI","getSearchHistory","getUserSearchHistory","userId","getSearchStats","getSearchTrends","historyAPI","getUserHistory","getUserContext","getUserHistoryById","getHistoryStats","getHistoryTrends","dashboardAPI","getOverview","getRecentActivity","getSystemHealth","getAnalytics","getPerformance","healthAPI","checkHealth"],"sources":["/Users/salomonmasasu/Library/Mobile Documents/com~apple~CloudDocs/CODING/uzimaai/admin-dashboard/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('adminToken');\n      localStorage.removeItem('adminData');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (username, password) => api.post('/auth/login', { username, password }),\n  logout: () => api.post('/auth/logout'),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (data) => api.put('/auth/profile', data),\n  changePassword: (currentPassword, newPassword) => \n    api.put('/auth/change-password', { currentPassword, newPassword }),\n  \n  // Helper methods\n  setAuthToken: (token) => {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: (page = 1, search = '') => api.get('/users', { \n    params: { page, search } \n  }),\n  getUser: (id) => api.get(`/users/${id}`),\n  createUser: (data) => api.post('/users', data),\n  updateUser: (id, data) => api.put(`/users/${id}`, data),\n  deleteUser: (id) => api.delete(`/users/${id}`),\n  getUserStats: () => api.get('/users/stats/overview'),\n};\n\n// Medicines API\nexport const medicinesAPI = {\n  getMedicines: (page = 1, search = '') => api.get('/medicines', { \n    params: { page, search } \n  }),\n  getMedicine: (id) => api.get(`/medicines/${id}`),\n  createMedicine: (data) => api.post('/medicines', data),\n  updateMedicine: (id, data) => api.put(`/medicines/${id}`, data),\n  deleteMedicine: (id) => api.delete(`/medicines/${id}`),\n  getMedicineStats: () => api.get('/medicines/stats/overview'),\n};\n\n// Reviews API\nexport const reviewsAPI = {\n  getReviews: (params) => api.get('/reviews', { params }),\n  getReview: (id) => api.get(`/reviews/${id}`),\n  updateReviewStatus: (id, status) => api.put(`/reviews/${id}/status`, { reviewStatus: status }),\n  deleteReview: (id) => api.delete(`/reviews/${id}`),\n  getReviewStats: () => api.get('/reviews/stats/overview'),\n};\n\n// Search History API\nexport const searchAPI = {\n  getSearchHistory: (params) => api.get('/search', { params }),\n  getUserSearchHistory: (userId, params) => api.get(`/search/user/${userId}`, { params }),\n  getSearchStats: () => api.get('/search/stats/overview'),\n  getSearchTrends: () => api.get('/search/stats/trends'),\n};\n\n// User History API\nexport const historyAPI = {\n  getUserHistory: (params) => api.get('/history', { params }),\n  getUserContext: (params) => api.get('/history/context', { params }),\n  getUserHistoryById: (userId, params) => api.get(`/history/user/${userId}`, { params }),\n  getHistoryStats: () => api.get('/history/stats/overview'),\n  getHistoryTrends: () => api.get('/history/stats/trends'),\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getOverview: () => api.get('/dashboard/overview'),\n  getRecentActivity: () => api.get('/dashboard/recent-activity'),\n  getSystemHealth: () => api.get('/dashboard/health'),\n  getAnalytics: () => api.get('/dashboard/analytics'),\n  getPerformance: () => api.get('/dashboard/performance'),\n};\n\n// Health check\nexport const healthAPI = {\n  checkHealth: () => api.get('/health'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
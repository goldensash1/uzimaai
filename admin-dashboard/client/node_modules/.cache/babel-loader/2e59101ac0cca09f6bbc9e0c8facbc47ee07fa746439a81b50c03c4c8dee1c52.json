{"ast":null,"code":"var _jsxFileName = \"/Users/salomonmasasu/Library/Mobile Documents/com~apple~CloudDocs/CODING/uzimaai/admin-dashboard/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    const adminData = localStorage.getItem('adminData');\n    console.log('AuthContext: Checking stored auth data:', {\n      hasToken: !!token,\n      hasAdminData: !!adminData,\n      token: token ? token.substring(0, 20) + '...' : null\n    });\n    if (token && adminData) {\n      try {\n        const parsedAdmin = JSON.parse(adminData);\n        setAdmin(parsedAdmin);\n        setIsAuthenticated(true);\n        authAPI.setAuthToken(token);\n        console.log('AuthContext: Successfully restored auth state');\n      } catch (error) {\n        console.error('Error parsing stored admin data:', error);\n        localStorage.removeItem('adminToken');\n        localStorage.removeItem('adminData');\n      }\n    } else {\n      console.log('AuthContext: No stored auth data found');\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      const {\n        token,\n        admin: adminData\n      } = response.data;\n\n      // Store token and admin data\n      localStorage.setItem('adminToken', token);\n      localStorage.setItem('adminData', JSON.stringify(adminData));\n\n      // Set auth token for API calls\n      authAPI.setAuthToken(token);\n\n      // Update state\n      setAdmin(adminData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout API\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      // Clear local storage\n      localStorage.removeItem('adminToken');\n      localStorage.removeItem('adminData');\n\n      // Clear auth token\n      authAPI.clearAuthToken();\n\n      // Update state\n      setAdmin(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      const updatedAdmin = response.data.admin;\n\n      // Update stored admin data\n      localStorage.setItem('adminData', JSON.stringify(updatedAdmin));\n      setAdmin(updatedAdmin);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Profile update failed. Please try again.'\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await authAPI.changePassword(currentPassword, newPassword);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Password change error:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Password change failed. Please try again.'\n      };\n    }\n  };\n  const value = {\n    admin,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/cx5P0loHDj/C7JyMo6sgY8poMU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","admin","setAdmin","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","adminData","console","log","hasToken","hasAdminData","substring","parsedAdmin","JSON","parse","setAuthToken","error","removeItem","login","username","password","response","data","setItem","stringify","success","_error$response","_error$response$data","logout","clearAuthToken","updateProfile","profileData","updatedAdmin","_error$response2","_error$response2$data","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/salomonmasasu/Library/Mobile Documents/com~apple~CloudDocs/CODING/uzimaai/admin-dashboard/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is already logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    const adminData = localStorage.getItem('adminData');\n\n    console.log('AuthContext: Checking stored auth data:', {\n      hasToken: !!token,\n      hasAdminData: !!adminData,\n      token: token ? token.substring(0, 20) + '...' : null\n    });\n\n    if (token && adminData) {\n      try {\n        const parsedAdmin = JSON.parse(adminData);\n        setAdmin(parsedAdmin);\n        setIsAuthenticated(true);\n        authAPI.setAuthToken(token);\n        console.log('AuthContext: Successfully restored auth state');\n      } catch (error) {\n        console.error('Error parsing stored admin data:', error);\n        localStorage.removeItem('adminToken');\n        localStorage.removeItem('adminData');\n      }\n    } else {\n      console.log('AuthContext: No stored auth data found');\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      const { token, admin: adminData } = response.data;\n\n      // Store token and admin data\n      localStorage.setItem('adminToken', token);\n      localStorage.setItem('adminData', JSON.stringify(adminData));\n      \n      // Set auth token for API calls\n      authAPI.setAuthToken(token);\n      \n      // Update state\n      setAdmin(adminData);\n      setIsAuthenticated(true);\n\n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Login failed. Please try again.'\n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call logout API\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      // Clear local storage\n      localStorage.removeItem('adminToken');\n      localStorage.removeItem('adminData');\n      \n      // Clear auth token\n      authAPI.clearAuthToken();\n      \n      // Update state\n      setAdmin(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      const updatedAdmin = response.data.admin;\n      \n      // Update stored admin data\n      localStorage.setItem('adminData', JSON.stringify(updatedAdmin));\n      setAdmin(updatedAdmin);\n\n      return { success: true };\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Profile update failed. Please try again.'\n      };\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await authAPI.changePassword(currentPassword, newPassword);\n      return { success: true };\n    } catch (error) {\n      console.error('Password change error:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Password change failed. Please try again.'\n      };\n    }\n  };\n\n  const value = {\n    admin,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    changePassword\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}